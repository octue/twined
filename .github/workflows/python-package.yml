# This workflow will build a dist and deploy it to pypi on successful push to the master branch
# (not that a meregd pull request results in a push so this will also run on merging into master)
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: python-package

on:
  push:
    tags:
      - '*.*.*' # Push events to matching version tags. This will therefore invoke when a release is created

jobs:

  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Ensure package is publishable with PyPI test server
      if: !contains(github.ref, 'master')

    - name: Publish latest package to PyPI
      if: contains(github.ref, 'master')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
        verbose: true



  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
          draft: false
          prerelease: false
  deploy:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*