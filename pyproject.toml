[tool.poetry]
name = "twined"
version = "0.6.0"
repository = "https://www.github.com/octue/twined"
description = "A library to help digital twins and data services talk to one another."
authors = [
    "Octue (github: octue) <support@octue.com>",
    "Tom Clark <tom@octue.com>",
    "Marcus Lugg <marcus@octue.com>",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Operating System :: OS Independent",
]
keywords = ["digital", "twins", "data", "services", "python", "schema"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
jsonschema = "^4"
python-dotenv = ">=0,<=2"

[tool.poetry.group.dev.dependencies]
pre-commit = ">=2.6.0"
coverage = ">=5.2.1"
numpy = "^1"
ruff = "^0.6.9"

[tool.ruff]
line-length = 120
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes.
lint.select = ["E", "F"]
# Ignore E501 line-too-long - see https://docs.astral.sh/ruff/faq/#is-the-ruff-linter-compatible-with-black for why
lint.ignore = ["F405", "E501", "E203", "E731", "N818"]

[tool.ruff.lint.isort]
known-first-party = ["twined", "app", "settings", "test", "examples"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
force-sort-within-sections = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
